/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if(head.next == null) return null;
        
        int size=0;
        ListNode current = head;
        while(current != null){
            current = current.next;
            size++;
        }
        
        if(n == size) return head.next;
        
        int indexToSearch = size - n;
        ListNode previous = head;
        int i = 1;
        while(i<indexToSearch){
            previous = previous.next;
            i++;
        }
        previous.next = previous.next.next;
        return head;
    }
}
